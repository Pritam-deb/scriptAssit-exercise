services:
  app:
    container_name: script-assist-app
    build:
      context: .
      dockerfile: Dockerfile
    # The command is already in your Dockerfile, so this is optional
    # command: bun run start:dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    # Use env_file to manage environment variables cleanly
    env_file:
      - .env
    # This is the key change: wait for services to be 'healthy'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME} # Use variables for consistency
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    # This healthcheck tells Docker how to know when Postgres is ready
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - '6379:6379'
    # This healthcheck tells Docker how to know when Redis is ready
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
